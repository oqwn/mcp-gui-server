name: Auto Publish to NPM

on:
  push:
    branches: [main]
    paths:
      - "src/**"
      - "prompts/**"
      - "package.json"
      - "tsconfig.json"
  workflow_dispatch:

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          registry-url: "https://registry.npmjs.org"

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8.15.0

      - name: Install dependencies
        run: pnpm install

      - name: Build project
        run: pnpm run build

      - name: Run tests (if available)
        run: pnpm test --if-present

      - name: Get current version
        id: version
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          echo "Current version: $CURRENT_VERSION"

      - name: Check if version exists on npm
        id: version_check
        run: |
          VERSION=${{ steps.version.outputs.version }}
          if npm view mcp-gui-server@$VERSION version > /dev/null 2>&1; then
            echo "exists=true" >> $GITHUB_OUTPUT
            echo "⚠️ Version $VERSION already exists on npm - skipping publish"
          else
            echo "exists=false" >> $GITHUB_OUTPUT
            echo "✅ Version $VERSION is new - ready to publish"
          fi

      - name: Publish to npm
        if: steps.version_check.outputs.exists == 'false'
        run: |
          echo "🚀 Publishing mcp-gui-server@${{ steps.version.outputs.version }} to npm..."
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Skip publish notification
        if: steps.version_check.outputs.exists == 'true'
        run: |
          echo "⏭️ Skipping publish - version ${{ steps.version.outputs.version }} already exists"
          echo "💡 To publish a new version, manually update package.json version and push"

      - name: Create Git tag (only if published)
        if: steps.version_check.outputs.exists == 'false'
        run: |
          VERSION=${{ steps.version.outputs.version }}
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag "v$VERSION" || echo "Tag v$VERSION already exists"
          git push origin "v$VERSION" || echo "Failed to push tag, continuing..."

      - name: Create GitHub Release (only if published)
        if: steps.version_check.outputs.exists == 'false'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.version.outputs.version }}
          release_name: Release v${{ steps.version.outputs.version }}
          body: |
            ## Changes in v${{ steps.version.outputs.version }}

            🤖 **Auto-published by GitHub Actions**

            ### Updated Components:
            - 📁 Source code changes in `src/` folder
            - 🧠 Prompt engineering updates in `prompts/` folder
            - 🏗️ Build and configuration improvements

            ### Installation:
            ```bash
            npx mcp-gui-server@${{ steps.version.outputs.version }}
            # Or latest:
            npx mcp-gui-server@latest
            ```

            ### Usage:
            Add to your MCP client configuration:
            ```json
            {
              "mcpServers": {
                "mcp-gui-server": {
                  "command": "npx",
                  "args": ["-y", "mcp-gui-server"],
                  "env": {
                    "OPENROUTER_API_KEY": "your-api-key",
                    "OPENROUTER_BASE_URL": "https://openrouter.ai/api/v1",
                    "OPENROUTER_MODEL": "anthropic/claude-3.5-sonnet"
                  }
                }
              }
            }
            ```

            **Full documentation:** [README.md](README.md) | [中文文档](README_zh.md)
          draft: false
          prerelease: false

      - name: Success notification
        if: steps.version_check.outputs.exists == 'false'
        run: |
          echo "🎉 Successfully published mcp-gui-server@${{ steps.version.outputs.version }} to npm!"
          echo "📦 Package available at: https://www.npmjs.com/package/mcp-gui-server"
          echo "🚀 Install with: npx mcp-gui-server@${{ steps.version.outputs.version }}"
          echo "🔗 Test with: npx mcp-gui-server@latest"
